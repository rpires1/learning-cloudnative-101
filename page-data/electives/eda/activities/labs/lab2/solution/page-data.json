{"componentChunkName":"component---src-pages-electives-eda-activities-labs-lab-2-solution-mdx","path":"/electives/eda/activities/labs/lab2/solution/","result":{"pageContext":{"frontmatter":{"title":"Event-Driven Architecture Lab Solution 2 - Working with Spring for Apache Kafka","description":"Lab activities associated with using the spring-kafka project with an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement."},"relativePagePath":"/electives/eda/activities/labs/lab2/solution.mdx","titleType":"page","MdxNode":{"id":"f42b08b2-1909-5dd7-bd8c-4ac5c2e158ab","children":[],"parent":"22bf4429-9af9-5d57-9fcd-56e9268b631e","internal":{"content":"---\ntitle: Event-Driven Architecture Lab Solution 2 - Working with Spring for Apache Kafka\ndescription: Lab activities associated with using the spring-kafka project with an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement.\n---\n\n## Solution - sample-01\n\n1. Create the topics `topic1` and `topic1.DLT` in your IBM Event Streams on Cloud instance.\n1. `git clone https://github.com/spring-projects/spring-kafka.git`\n2. `cd spring-kafka/samples/sample-01`\n3. Include the necessary credentials in the `src/main/resources/application.yml` file by merging the existing contents with the structure below:\n    ```yaml\n    spring:\n      kafka:\n        bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n        ssl:\n          protocol: TLSv1.2\n        properties:\n          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n          sasl.mechanism: PLAIN\n          security.protocol: SASL_SSL\n    ```\n4. `mvn clean package`\n5. `java -jar target/kafka-sample-01-2.5.0.RELEASE.jar`\n6. `curl -X POST http://localhost:8080/send/foo/bar`\n7. `curl -X POST http://localhost:8080/send/foo/fail`\n\n## Solution - sample-02\n\n1. Create the topics `foos` and `bars` in your IBM Event Streams on Cloud instance.\n2. `git clone https://github.com/spring-projects/spring-kafka.git`\n3. `cd spring-kafka/samples/sample-02`\n4. Include the necessary credentials in the `src/main/resources/application.yml` file by merging the existing contents with the structure below:\n    ```yaml\n    spring:\n      kafka:\n        bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n        ssl:\n          protocol: TLSv1.2\n        properties:\n          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n          sasl.mechanism: PLAIN\n          security.protocol: SASL_SSL\n    ```\n5. `mvn clean package`\n6. `java -jar target/kafka-sample-02-2.5.0.RELEASE.jar`\n7. `curl -X POST http://localhost:8080/send/foo/bar`\n8. `curl -X POST http://localhost:8080/send/bar/baz`\n9. `curl -X POST http://localhost:8080/send/unknown/xxx`\n\n## Solution - sample-03\n\n1. Create the topics `topic2` and `topic3` in your IBM Event Streams on Cloud instance.\n2. `git clone https://github.com/spring-projects/spring-kafka.git`\n3. `cd spring-kafka/samples/sample-03`\n4. Include the necessary credentials in the `src/main/resources/application.yml` file by merging the existing contents with the structure below:\n    ```yaml\n    spring:\n      kafka:\n        bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n        ssl:\n          protocol: TLSv1.2\n        properties:\n          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n          sasl.mechanism: PLAIN\n          security.protocol: SASL_SSL\n    ```\n5. `mvn clean package`\n6. `java -jar target/kafka-sample-03-2.5.0.RELEASE.jar`\n7. `curl -X POST http://localhost:8080/send/foos/a,b,c,d,e`\n","type":"Mdx","contentDigest":"b30ae16d3c1ae6d36975bf093ac6ea19","owner":"gatsby-plugin-mdx","counter":592},"frontmatter":{"title":"Event-Driven Architecture Lab Solution 2 - Working with Spring for Apache Kafka","description":"Lab activities associated with using the spring-kafka project with an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement."},"exports":{},"rawBody":"---\ntitle: Event-Driven Architecture Lab Solution 2 - Working with Spring for Apache Kafka\ndescription: Lab activities associated with using the spring-kafka project with an IBM Event Streams on Cloud instance, to be used with event-driven architecture enablement.\n---\n\n## Solution - sample-01\n\n1. Create the topics `topic1` and `topic1.DLT` in your IBM Event Streams on Cloud instance.\n1. `git clone https://github.com/spring-projects/spring-kafka.git`\n2. `cd spring-kafka/samples/sample-01`\n3. Include the necessary credentials in the `src/main/resources/application.yml` file by merging the existing contents with the structure below:\n    ```yaml\n    spring:\n      kafka:\n        bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n        ssl:\n          protocol: TLSv1.2\n        properties:\n          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n          sasl.mechanism: PLAIN\n          security.protocol: SASL_SSL\n    ```\n4. `mvn clean package`\n5. `java -jar target/kafka-sample-01-2.5.0.RELEASE.jar`\n6. `curl -X POST http://localhost:8080/send/foo/bar`\n7. `curl -X POST http://localhost:8080/send/foo/fail`\n\n## Solution - sample-02\n\n1. Create the topics `foos` and `bars` in your IBM Event Streams on Cloud instance.\n2. `git clone https://github.com/spring-projects/spring-kafka.git`\n3. `cd spring-kafka/samples/sample-02`\n4. Include the necessary credentials in the `src/main/resources/application.yml` file by merging the existing contents with the structure below:\n    ```yaml\n    spring:\n      kafka:\n        bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n        ssl:\n          protocol: TLSv1.2\n        properties:\n          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n          sasl.mechanism: PLAIN\n          security.protocol: SASL_SSL\n    ```\n5. `mvn clean package`\n6. `java -jar target/kafka-sample-02-2.5.0.RELEASE.jar`\n7. `curl -X POST http://localhost:8080/send/foo/bar`\n8. `curl -X POST http://localhost:8080/send/bar/baz`\n9. `curl -X POST http://localhost:8080/send/unknown/xxx`\n\n## Solution - sample-03\n\n1. Create the topics `topic2` and `topic3` in your IBM Event Streams on Cloud instance.\n2. `git clone https://github.com/spring-projects/spring-kafka.git`\n3. `cd spring-kafka/samples/sample-03`\n4. Include the necessary credentials in the `src/main/resources/application.yml` file by merging the existing contents with the structure below:\n    ```yaml\n    spring:\n      kafka:\n        bootstrap-servers: <your-bootstrap-nodes-property-of-your-IBM-Event-Streams-on-Cloud-instance>\n        ssl:\n          protocol: TLSv1.2\n        properties:\n          sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username=\"token\" password=\"<your-api-key-of-your-IBM-Event-Streams-on-Cloud-instance>\";\n          sasl.mechanism: PLAIN\n          security.protocol: SASL_SSL\n    ```\n5. `mvn clean package`\n6. `java -jar target/kafka-sample-03-2.5.0.RELEASE.jar`\n7. `curl -X POST http://localhost:8080/send/foos/a,b,c,d,e`\n","fileAbsolutePath":"/home/runner/work/learning-cloudnative-101/learning-cloudnative-101/src/pages/electives/eda/activities/labs/lab2/solution.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3037994772","3037994772","530240012","530240012","768070550"]}